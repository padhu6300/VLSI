module ALU (
    input [3:0] A,
    input [3:0] B,
    input [2:0] Sel,
    output reg [3:0] Result,
    output reg CarryOut,
    output Zero
);

always @(*) begin
    CarryOut = 0;
    case(Sel)
        3'b000: {CarryOut, Result} = A + B;    // Addition
        3'b001: {CarryOut, Result} = A - B;    // Subtraction
        3'b010: Result = A & B;                // AND
        3'b011: Result = A | B;                // OR
        3'b100: Result = A ^ B;                // XOR
        3'b101: Result = ~A;                   // NOT A
        3'b110: Result = A << 1;               // Shift left
        3'b111: Result = A >> 1;               // Shift right
        default: Result = 4'b0000;
    endcase
end

assign Zero = (Result == 4'b0000);

endmodule
